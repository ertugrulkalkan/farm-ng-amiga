// Copyright (c) farm-ng, inc.
//
// Licensed under the Amiga Development Kit License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://github.com/farm-ng/amiga-dev-kit/blob/main/LICENSE
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.



syntax = "proto3";

import "sophus/linalg.proto";
import "sophus/lie.proto";

package farm_ng.controller.proto;

service ControllerService {
  rpc moveToGoalPose(MoveToGoalPoseRequest)
      returns (stream MoveToGoalPoseReply) {}
}


message MoveToGoalPoseRequest {
    enum Command {
        UNKNOWN=0;
        CANCEL=1;
        UPDATE_GOAL=2;
    }
    Command command = 1;
    sophus.proto.Se3F64 world_pose_goal = 2;


    // max speed to achieve the goal
    double max_speed = 3;
    // max angular rate to achieve the goal
    double max_angular_rate = 4;
}

message MoveToGoalPoseReply {
    sophus.proto.Se3F64 world_pose_goal = 1;
    sophus.proto.Se3F64 world_pose_robot = 2;
    // estimated time of arrival at the robot
    double eta = 3;
    enum State {
        UNKNOWN=0;
        FAILED = 1;
        IN_PROGRESS = 2;
        ACHIEVED = 3;
    }
    State state = 4;
}
